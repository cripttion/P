{"ast":null,"code":"var _jsxFileName = \"/home/cripttion/Desktop/Projects/onlinePMS/client/src/Pages/Login.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useLoginManager } from \"../StateManagement/UserManagement\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const {\n    setUserData,\n    setUserRole\n  } = useLoginManager();\n  const navigate = useNavigate();\n  const loginForm = useRef();\n  const [user, setUser] = useState({\n    userId: \"\",\n    password: \"\",\n    role: \"\"\n  });\n  const options = [{\n    value: \"Admin\",\n    label: \"Admin\"\n  }, {\n    value: \"Teacher\",\n    label: \"Professor\"\n  }, {\n    value: \"Student\",\n    label: \"Student\"\n  }];\n  useEffect(() => {\n    // Set up periodic status checks every 5 minutes (adjust as needed)\n    const statusCheckInterval = setInterval(checkLoginStatus, 5 * 60 * 1000);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(statusCheckInterval);\n  }, []);\n  const checkLoginStatus = async () => {\n    try {\n      // Placeholder for the server-side endpoint to check login status\n      const response = await axios.get(\"http://localhost:3001/checkLoginStatus\");\n      if (!response.data.isLogged) {\n        // If the server reports that the user is no longer logged in, log them out\n        handleLogout();\n      }\n    } catch (error) {\n      console.error(\"Error checking login status:\", error);\n    }\n  };\n  const handleLogout = () => {\n    // Clear local storage data\n    localStorage.clear();\n\n    // Navigate to the login page\n    navigate(\"/\", {\n      replace: true\n    });\n  };\n  const handleSuccessfulLogin = async response => {\n    setUser({\n      userId: \"\",\n      password: \"\",\n      role: \"\"\n    });\n    if (response.status === 200) {\n      const {\n        token\n      } = response.data;\n      localStorage.setItem(\"sessionToken\", token);\n      const userDataResponse = await axios.get(\"http://localhost:3001/user/data\", {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      setUserData(userDataResponse.data.studentData);\n      setUserRole(user.role);\n      navigate(\"/Home\", {\n        replace: true\n      });\n    } else {\n      handleLogout();\n      toast.error(\"Invalid userId or Password\", {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true\n      });\n    }\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:3001/login\", user, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      handleSuccessfulLogin(response);\n    } catch (error) {\n      // ... (your existing error handling)\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setUser(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleRoleChange = selectedOption => {\n    setUser(prevUser => ({\n      ...prevUser,\n      role: selectedOption.value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col lg:flex-row bg-bgBlue justify-end h-screen\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"95vh\"\n        },\n        className: \"shadow-lg shadow-gray-700 rounded-xl mx-2 lg:mx-4 border my-5 p-5 text-black bg-textColor1 lg:w-4/12 flex flex-col items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"  text-xl md:text-2xl lg:text-3xl font-semibold mb-4\",\n          children: \"Welcome to Galgotias University\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"border upCard p-4 rounded-lg w-full\",\n          ref: loginForm,\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"userId\",\n            className: \"block mb-2\",\n            children: \"User-ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            id: \"userId\",\n            name: \"userId\",\n            placeholder: \"StudentID\",\n            onChange: handleInputChange,\n            value: user.userId,\n            required: true,\n            className: \"border rounded-sm p-2 w-full outline-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"block mb-2 mt-4\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            placeholder: \"********\",\n            onChange: handleInputChange,\n            value: user.password,\n            required: true,\n            className: \"border rounded-sm p-2 w-full outline-none\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            options: options,\n            onChange: handleRoleChange,\n            placeholder: \"Identity\",\n            className: \"mt-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"bg-bgBlueDark text-white rounded-full px-6 text-center py-2 mt-4\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"copyright\",\n          children: \" \\xA9 2024 to rycienTech\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Login, \"KC3CkGZrmpMeIZVdV1LnWUS9Rx4=\", false, function () {\n  return [useLoginManager, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useRef","useState","useEffect","Select","useNavigate","axios","toast","ToastContainer","useLoginManager","jsxDEV","_jsxDEV","Fragment","_Fragment","Login","_s","setUserData","setUserRole","navigate","loginForm","user","setUser","userId","password","role","options","value","label","statusCheckInterval","setInterval","checkLoginStatus","clearInterval","response","get","data","isLogged","handleLogout","error","console","localStorage","clear","replace","handleSuccessfulLogin","status","token","setItem","userDataResponse","headers","Authorization","studentData","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","handleSubmit","e","preventDefault","post","handleInputChange","name","target","prev","handleRoleChange","selectedOption","prevUser","children","fileName","_jsxFileName","lineNumber","columnNumber","className","style","height","ref","onSubmit","htmlFor","type","id","placeholder","onChange","required","_c","$RefreshReg$"],"sources":["/home/cripttion/Desktop/Projects/onlinePMS/client/src/Pages/Login.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from \"react\";\nimport Select from \"react-select\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { toast, ToastContainer } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { useLoginManager } from \"../StateManagement/UserManagement\";\n\nfunction Login() {\n  const { setUserData, setUserRole } = useLoginManager();\n  const navigate = useNavigate();\n  const loginForm = useRef();\n  const [user, setUser] = useState({\n    userId: \"\",\n    password: \"\",\n    role: \"\",\n  });\n  const options = [\n    { value: \"Admin\", label: \"Admin\" },\n    { value: \"Teacher\", label: \"Professor\" },\n    { value: \"Student\", label: \"Student\" },\n  ];\n\n  useEffect(() => {\n    // Set up periodic status checks every 5 minutes (adjust as needed)\n    const statusCheckInterval = setInterval(checkLoginStatus, 5 * 60 * 1000);\n\n    // Clean up the interval on component unmount\n    return () => clearInterval(statusCheckInterval);\n  }, []);\n\n  const checkLoginStatus = async () => {\n    try {\n      // Placeholder for the server-side endpoint to check login status\n      const response = await axios.get(\"http://localhost:3001/checkLoginStatus\");\n\n      if (!response.data.isLogged) {\n        // If the server reports that the user is no longer logged in, log them out\n        handleLogout();\n      }\n    } catch (error) {\n      console.error(\"Error checking login status:\", error);\n    }\n  };\n\n  const handleLogout = () => {\n    // Clear local storage data\n    localStorage.clear();\n\n    // Navigate to the login page\n    navigate(\"/\", { replace: true });\n  };\n\n  const handleSuccessfulLogin = async (response) => {\n    setUser({\n      userId: \"\",\n      password: \"\",\n      role: \"\",\n    });\n\n    if (response.status === 200) {\n      const { token } = response.data;\n\n      localStorage.setItem(\"sessionToken\", token);\n\n      const userDataResponse = await axios.get(\"http://localhost:3001/user/data\", {\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n\n      setUserData(userDataResponse.data.studentData);\n      setUserRole(user.role);\n\n      navigate(\"/Home\", { replace: true });\n    } else {\n      handleLogout();\n\n      toast.error(\"Invalid userId or Password\", {\n        position: \"top-right\",\n        autoClose: 3000,\n        hideProgressBar: false,\n        closeOnClick: true,\n        pauseOnHover: true,\n        draggable: true,\n      });\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    try {\n      const response = await axios.post(\"http://localhost:3001/login\", user, {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      });\n\n      handleSuccessfulLogin(response);\n    } catch (error) {\n      // ... (your existing error handling)\n    }\n  };\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setUser((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  const handleRoleChange = (selectedOption) => {\n    setUser((prevUser) => ({\n      ...prevUser,\n      role: selectedOption.value,\n    }));\n  };\n\n  return (\n    <>\n      <ToastContainer />\n      <div className=\"flex flex-col lg:flex-row bg-bgBlue justify-end h-screen\">\n        <div\n          style={{ height: \"95vh\" }}\n          className=\"shadow-lg shadow-gray-700 rounded-xl mx-2 lg:mx-4 border my-5 p-5 text-black bg-textColor1 lg:w-4/12 flex flex-col items-center justify-between\"\n        >\n          <div className=\"  text-xl md:text-2xl lg:text-3xl font-semibold mb-4\">\n            Welcome to Galgotias University\n          </div>\n          <form\n            className=\"border upCard p-4 rounded-lg w-full\"\n            ref={loginForm}\n            onSubmit={handleSubmit}\n          >\n            <label htmlFor=\"userId\" className=\"block mb-2\">\n              User-ID\n            </label>\n            <input\n              type=\"text\"\n              id=\"userId\"\n              name=\"userId\"\n              placeholder=\"StudentID\"\n              onChange={handleInputChange}\n              value={user.userId}\n              required\n              className=\"border rounded-sm p-2 w-full outline-none\"\n            />\n            <label htmlFor=\"password\" className=\"block mb-2 mt-4\">\n              Password\n            </label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              placeholder=\"********\"\n              onChange={handleInputChange}\n              value={user.password}\n              required\n              className=\"border rounded-sm p-2 w-full outline-none\"\n            />\n            <Select\n              options={options}\n              onChange={handleRoleChange}\n              placeholder=\"Identity\"\n              className=\"mt-4\"\n            />\n            <button\n              type=\"submit\"\n              className=\"bg-bgBlueDark text-white rounded-full px-6 text-center py-2 mt-4\"\n            >\n              Login\n            </button>\n          </form>\n          <div className=\"copyright\"> &copy; 2024 to rycienTech</div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}