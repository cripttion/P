{"ast":null,"code":"import student from './../assests/images/Icons/student.png';\nimport teacher from './../assests/images/Icons/teacher.png';\nimport teacher2 from './../assests/images/Icons/teacher(1).png';\nimport project from './../assests/images/Icons/solution.png';\nconst userRole = sessionStorage.getItem('role');\nconst homeData = [{\n  src: student,\n  title: 'Add Student',\n  toRoute: '/a/addStudent',\n  category: ['Admin'],\n  relatedTo: 'Admin'\n}, {\n  src: student,\n  title: 'Update Student Data',\n  toRoute: '/s/addStudeent',\n  category: ['Admin'],\n  relatedTo: 'Admin'\n}, {\n  src: teacher,\n  title: 'Add teacher',\n  toRoute: '/a/addTeacher',\n  category: ['Admin'],\n  relatedTo: 'Teacher'\n}, {\n  src: teacher2,\n  title: 'Update Teacher Data',\n  toRoute: '/s/addStudeent',\n  category: ['Admin'],\n  relatedTo: 'Teacher'\n}, {\n  src: project,\n  title: 'Create Project Group',\n  toRoute: '/project/createProject',\n  category: ['Admin', 'Student', 'Guide'],\n  relatedTo: 'Projects'\n}, {\n  src: student,\n  title: 'Projects Groups',\n  toRoute: '/s/addStudeent',\n  category: ['Admin'],\n  relatedTo: 'Projects'\n}, {\n  src: student,\n  title: 'Research papers',\n  toRoute: '/s/addStudeent',\n  category: ['Admin'],\n  relatedTo: 'Projects'\n}, {\n  src: teacher2,\n  title: 'Allocate Guide',\n  toRoute: '/s/addStudeent',\n  category: ['Admin'],\n  relatedTo: 'Projects'\n}, {\n  src: teacher,\n  title: 'Allocate Reviewer',\n  toRoute: '/s/addStudeent',\n  category: ['Admin'],\n  relatedTo: 'Projects'\n}, {\n  src: teacher,\n  title: 'Project to Guide',\n  toRoute: '/s/addStudeent',\n  category: ['guide', 'Admin'],\n  relatedTo: 'Guide'\n}, {\n  src: teacher,\n  title: 'Project to Review ',\n  toRoute: '/s/addStudeent',\n  category: ['reviewer', 'Admin'],\n  relatedTo: 'Reviewer'\n}, {\n  src: teacher,\n  title: 'Update Guide',\n  toRoute: '/s/addStudeent',\n  category: ['Admin'],\n  relatedTo: 'Guide'\n}, {\n  src: teacher,\n  title: 'Update Reviewer ',\n  toRoute: '/s/addStudeent',\n  category: ['Admin'],\n  relatedTo: 'Reviewer'\n}, {\n  src: project,\n  title: 'My project',\n  toRoute: '/s/myProject',\n  category: ['Student'],\n  relatedTo: 'Student'\n}];\nlet filteredHomeData = [];\nif (userRole) {\n  filteredHomeData = homeData.filter(item => item.category && item.category.includes(userRole) || item.relatedTo === userRole);\n} else {\n  // Handle the case when userRole is undefined, e.g., show default or handle accordingly\n  console.error(\"User role is undefined\");\n}\nconsole.log(filteredHomeData);\nexport default filteredHomeData;","map":{"version":3,"names":["student","teacher","teacher2","project","userRole","sessionStorage","getItem","homeData","src","title","toRoute","category","relatedTo","filteredHomeData","filter","item","includes","console","error","log"],"sources":["/home/cripttion/Desktop/Projects/onlinePMS/client/src/utility/HomData.js"],"sourcesContent":["import student from './../assests/images/Icons/student.png';\nimport teacher from './../assests/images/Icons/teacher.png';\nimport teacher2 from './../assests/images/Icons/teacher(1).png';\nimport project from './../assests/images/Icons/solution.png';\nconst userRole = sessionStorage.getItem('role');\nconst homeData = [\n    {src: student, title: 'Add Student', toRoute: '/a/addStudent' ,category:['Admin'],relatedTo:'Admin'},\n    {src: student, title: 'Update Student Data', toRoute: '/s/addStudeent',category:['Admin'],relatedTo:'Admin'},\n    {src: teacher, title: 'Add teacher', toRoute: '/a/addTeacher',category:['Admin'],relatedTo:'Teacher'},\n    {src: teacher2, title: 'Update Teacher Data', toRoute: '/s/addStudeent',category:['Admin'],relatedTo:'Teacher'},\n    {src: project, title: 'Create Project Group', toRoute: '/project/createProject',category:['Admin','Student','Guide'],relatedTo:'Projects'},\n    {src: student, title: 'Projects Groups', toRoute: '/s/addStudeent',category:['Admin'],relatedTo:'Projects'},\n    {src: student, title: 'Research papers', toRoute: '/s/addStudeent',category:['Admin'],relatedTo:'Projects'},\n    {src: teacher2, title: 'Allocate Guide', toRoute: '/s/addStudeent',category:['Admin'],relatedTo:'Projects'},\n    {src: teacher, title: 'Allocate Reviewer', toRoute: '/s/addStudeent',category:['Admin'],relatedTo:'Projects'},\n    {src: teacher, title: 'Project to Guide', toRoute: '/s/addStudeent',category:['guide','Admin'],relatedTo:'Guide'},\n    {src: teacher, title: 'Project to Review ', toRoute: '/s/addStudeent',category:['reviewer','Admin'],relatedTo:'Reviewer'},\n    {src: teacher, title: 'Update Guide', toRoute: '/s/addStudeent',category:['Admin'],relatedTo:'Guide'},\n\n    {src: teacher, title: 'Update Reviewer ', toRoute: '/s/addStudeent',category:['Admin'],relatedTo:'Reviewer'},\n\n    {src:project,title:'My project',toRoute:'/s/myProject',category:['Student'],relatedTo:'Student'}\n  ];\n  let filteredHomeData = [];\n\n  if (userRole) {\n    filteredHomeData = homeData.filter(item =>\n      ( item.category &&item.category.includes(userRole) || item.relatedTo === userRole)\n    );\n  } else {\n    // Handle the case when userRole is undefined, e.g., show default or handle accordingly\n    console.error(\"User role is undefined\");\n  }\n  console.log(filteredHomeData);\n  export default filteredHomeData;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}