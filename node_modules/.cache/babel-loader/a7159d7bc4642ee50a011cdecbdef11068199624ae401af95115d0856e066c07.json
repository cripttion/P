{"ast":null,"code":"var _jsxFileName = \"/home/cripttion/Desktop/Projects/onlinePMS/client/src/Admin/StudentList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport AdminNav from './Components/AdminNav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst StudentList = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [studetnData, setStudentData] = useState();\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n  const handleUploadClick = async () => {\n    try {\n      setLoading(true);\n      const formData = new FormData();\n      formData.append('file', file);\n      await axios.post('http://localhost:3001/sdUpload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      console.log('File uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading File', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/studentsData');\n        // Assuming your data is in the 'data' property of the response\n        const data = response.data;\n        console.log('Fetched data:', data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    // Call the getData function\n    getData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AdminNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-md mx-auto mt-20 p-6 bg-color1 rounded-md shadow-md text-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-2xl font-semibold mb-4 text-black\",\n        children: \"Upload Student List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"fileInput\",\n          className: \"block text-sm font-medium text-color3\",\n          children: \"Choose Excel File (.xlsx)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"fileInput\",\n          accept: \".xlsx\",\n          cursor: \"pointer\",\n          className: \"mt-1 cursor-pointer p-2 rounded-md w-full bg-color2 text-color3\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-color3 hover:bg-color2 text-black px-4 py-2 rounded-md\",\n          onClick: () => {\n            alert('Show button clicked');\n          },\n          children: \"Show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"bg-color3 hover:bg-color2 text-black px-4 py-2 rounded-md\",\n          onClick: handleUploadClick,\n          disabled: !file || loading // Disable the button if no file is selected or if loading\n          ,\n          children: loading ? 'Uploading...' : 'Upload to Database'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(StudentList, \"RGENvCBJmCDP5B5KpCansWPInHM=\");\n_c = StudentList;\nexport default StudentList;\nvar _c;\n$RefreshReg$(_c, \"StudentList\");","map":{"version":3,"names":["React","useEffect","useState","axios","AdminNav","jsxDEV","_jsxDEV","Fragment","_Fragment","StudentList","_s","file","setFile","loading","setLoading","studetnData","setStudentData","handleFileChange","e","selectedFile","target","files","handleUploadClick","formData","FormData","append","post","headers","console","log","error","getData","response","get","data","children","fileName","_jsxFileName","lineNumber","columnNumber","className","htmlFor","type","id","accept","cursor","onChange","onClick","alert","disabled","_c","$RefreshReg$"],"sources":["/home/cripttion/Desktop/Projects/onlinePMS/client/src/Admin/StudentList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport AdminNav from './Components/AdminNav';\n\nconst StudentList = () => {\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const[studetnData,setStudentData] = useState()\n  const handleFileChange = (e) => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n\n  const handleUploadClick = async () => {\n    try {\n      setLoading(true);\n\n      const formData = new FormData();\n      formData.append('file', file);\n\n      await axios.post('http://localhost:3001/sdUpload', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n\n      console.log('File uploaded successfully');\n    } catch (error) {\n      console.error('Error uploading File', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    const getData = async () => {\n      try {\n        const response = await axios.get('http://localhost:3001/studentsData');\n        // Assuming your data is in the 'data' property of the response\n        const data = response.data;\n        console.log('Fetched data:', data);\n      } catch (error) {\n        console.error('Error fetching data:', error);\n      }\n    };\n\n    // Call the getData function\n    getData();\n  }, []);\n  return (\n    <>\n      <AdminNav />\n      <div className=\"max-w-md mx-auto mt-20 p-6 bg-color1 rounded-md shadow-md text-white\">\n        <h2 className=\"text-2xl font-semibold mb-4 text-black\">Upload Student List</h2>\n\n        {/* File Input */}\n        <div className=\"mb-4\">\n          <label htmlFor=\"fileInput\" className=\"block text-sm font-medium text-color3\">\n            Choose Excel File (.xlsx)\n          </label>\n          <input\n            type=\"file\"\n            id=\"fileInput\"\n            accept=\".xlsx\"\n            cursor=\"pointer\"\n            className=\"mt-1 cursor-pointer p-2 rounded-md w-full bg-color2 text-color3\"\n            onChange={handleFileChange}\n          />\n        </div>\n\n        {/* Show and Upload Buttons */}\n        <div className=\"flex space-x-4\">\n          <button\n            className=\"bg-color3 hover:bg-color2 text-black px-4 py-2 rounded-md\"\n            onClick={() => {\n              alert('Show button clicked');\n            }}\n          >\n            Show\n          </button>\n          <button\n            className=\"bg-color3 hover:bg-color2 text-black px-4 py-2 rounded-md\"\n            onClick={handleUploadClick}\n            disabled={!file || loading} // Disable the button if no file is selected or if loading\n          >\n            {loading ? 'Uploading...' : 'Upload to Database'}\n          </button>\n        </div>\n      </div>\n\n      {/* Rest of your component */}\n      \n    </>\n  );\n};\n\nexport default StudentList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}